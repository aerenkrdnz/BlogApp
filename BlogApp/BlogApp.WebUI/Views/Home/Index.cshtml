
<div class="container">


    <div class="container">
        <div class="p-4 p-md-5 mb-4 rounded text-body-emphasis bg-body-secondary">
            <div class="col-lg-6 px-0">
                <h1 class="display-4 fst-italic "><b>Bir Blog Sayfasından Daha Fazlası</b></h1>
                <p class="lead my-3">Bu sayfa Asp.Net Core MVC ve <strong>Ali Eren Karadeniz</strong>'in hakkında bilgileri içermektedir.<hr /> <br />Yönetim paneli kısmından kategori ve blog oluşturabilirsiniz. Projeler kısmında ise veritabanına eklediğiniz projeleri görüntüleyebilirsiniz. Ayrıca iletişim sayfasından bana ulaşabilirsiniz. </p>

            </div>
        </div>


        <div class="row g-5">
            <div class="col-md-8">
                <h3 class="pb-4 mb-4 fst-italic border-bottom">
                </h3>

                <article class="blog-post">
                    <h2 class="display-5 link-body-emphasis mb-1">Modern Bir Blog Sitesi Oluşturmanın Adımları: ASP.NET Core MVC İle Yolculuk</h2>
                    <p class="blog-post-meta">29 Mart 2024 </p>
                    <p>
                        Merhaba sevgili okuyucular,Bu blog yazısında, size modern bir blog sitesi oluşturmanın heyecan verici adımlarını adım adım anlatacağım. Günümüzün popüler web teknolojilerinden biri olan <strong>ASP.NET Core MVC</strong> kullanarak, kendi blogunuzu oluşturmak artık çok daha kolay. Hazırsanız, işte başlamanız için bir rehber:
                    </p>
                    <hr>

                    <h2>Proje Oluşturma ve Temel Ayarlar</h2>

                    <p>İlk adım olarak, Visual Studio veya Visual Studio Code gibi bir IDE kullanarak yeni bir ASP.NET Core MVC projesi oluşturun. Bu proje, sizin benzersiz tarzınızı ve içeriğinizi yansıtan blog sitesinin temel altyapısını oluşturacak.</p>

                    <h3>Model Oluşturma</h3>
                    <p>Bir blog sitesi için önemli olan şeylerden biri, içerik yönetim sistemi. Bu sistemde, gönderilerinizi ve diğer verilerinizi saklamak için bir veritabanı modeli oluşturmanız gerekecek. Örneğin, "Post" adında bir model oluşturarak başlayabilirsiniz. Bu model, bir blog gönderisinin başlık, içerik, yayın tarihi gibi özelliklerini içermelidir.</p>

                    <h3>Veritabanı Bağlantısı Kurma</h3>
                    <p>Şimdi, oluşturduğunuz modeli kullanarak bir veritabanı oluşturun veya mevcut bir veritabanıyla bağlantı kurun. ASP.NET Core MVC'nin sunduğu Entity Framework Core gibi bir ORM aracılığıyla bu işlem oldukça kolaydır. Veritabanı bağlantınızı kurduktan sonra, verilerinizi güvenli bir şekilde saklayabilir ve işleyebilirsiniz.</p>

                    <h3>Controller ve Views Oluşturma</h3>
                    <p>Şimdi, blog gönderilerini yönetmek için bir controller ve bununla ilişkili views oluşturun. Controller, kullanıcıların web uygulamanızla etkileşimde bulunabilecekleri iş mantığını yönetirken, views, kullanıcı arayüzünü temsil eder. CRUD işlemlerini (Create, Read, Update, Delete) gerçekleştirebileceğiniz bir controller ve bu işlemleri destekleyen views oluşturun.</p>

                    <h3>Uygulamayı Özelleştirme</h3>
                    <p>Şimdi sıra geldi blog sitenizi kendi zevkinize göre özelleştirmeye. Örneğin, Bootstrap gibi bir CSS çerçevesi kullanarak görsel olarak çekici bir tasarım oluşturabilir, veya Markdown desteği ekleyerek yazılarınızı daha kolay biçimlendirebilirsiniz.</p>

                    <h3>Güvenlik ve Performans İyileştirmeleri</h3>
                    <p>Bir blog sitesi oluştururken güvenlik ve performans unsurlarını göz önünde bulundurmak çok önemlidir. ASP.NET Core MVC'nin sunduğu yeteneklerle, kullanıcıların verilerine güvenli bir şekilde erişebilir ve web uygulamanızın performansını optimize edebilirsiniz. Örneğin, kimlik doğrulama ve yetkilendirme işlemlerini ekleyerek güvenliği artırabilir ve önbellekleme gibi teknikler kullanarak performansı artırabilirsiniz.</p>

                    <h3>Test Etme ve Yayınlama</h3>
                    <p>Blog sitenizi geliştirdikten sonra, onu test etmeyi ve yayınlamayı unutmayın. Farklı tarayıcılarda ve cihazlarda uygulamanın doğru şekilde çalıştığından emin olun. Ayrıca, hataları ve iyileştirme fırsatlarını tespit etmek için kapsamlı bir test süreci yürütün.</p>

                </article>

            </div>


            <div class="col-md-4">
                <div class="position-sticky" style="top: 2rem;">
                    <div class="p-4 mb-3 bg-body-tertiary rounded">
                        <h4 class="fst-italic">Hakkında</h4>
                        <p class="mb-0">Dinamik yazılım geliştirme alanında temel bilgi ve becerilerimi sürekli olarak geliştirmek için kararlı bir şekilde çalışan yetenekli bir back-end geliştiriciyim.</p>
                    </div>
                    <div class="p-4 mb-3 bg-body-tertiary rounded">
                        <h4 class="fst-italic">Teknik Beceriler</h4>
                        <p class="mb-0">

                            <li>C# (Asp.NetCore, MVC, Entity Framework, WebApi)</li>
                            <li>NodeJs (ExpressJs, Sequelize)</li>
                            <li>Veritabanı (MySQL, MsSql, MongoDB)</li>
                            <li>Web Tasarımı (HTML5, JavaScript, CSS3, Bootstrap, jQuery)</li>
                            <li>Terminal (Git, Bash)</li>
                            <li>Açık Kaynak Kodları (Github)</li>

                        </p>
                    </div>

                    <div>
                        <h4 class="fst-italic">Önceki Projemin Demo Videosunu Aşağıdan İzleyebilirsiniz</h4>

                        <div class="col-lg-5">
                            <iframe width="393" height="355" src="https://www.youtube.com/embed/4TkcBdTOV7Y?si=XoGVnPsoWR9zCyew" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
                        </div>

                    </div>

                    
                </div>
            </div>
        </div>

    </div>
</div>







